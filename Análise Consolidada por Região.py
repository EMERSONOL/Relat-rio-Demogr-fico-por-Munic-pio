import streamlit as st
import pandas as pd
import plotly.express as px
import io

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(
    page_title="Relat√≥rio Demogr√°fico do Rio de Janeiro",
    page_icon="üèôÔ∏è",
    layout="wide"
)

# --- Carregamento e Prepara√ß√£o dos Dados ---
@st.cache_data
def carregar_dados():
    # Dados extra√≠dos da an√°lise anterior, incluindo Pop. 2010 e classifica√ß√£o regional
    csv_data = """Munic√≠pio,Regi√£o,Pop. 2010,Pop. 2022,% Brancos (2010),% Pretos (2010)
Angra dos Reis,M√©dio Para√≠ba,169511,181228,45.0,11.2
Aperib√©,Noroeste Fluminense,10213,10893,59.1,7.9
Araruama,Baixadas Litor√¢neas,112008,126726,39.0,15.8
Areal,Serrana,11423,11765,50.1,15.7
Arma√ß√£o dos B√∫zios,Baixadas Litor√¢neas,27560,39033,45.3,15.0
Arraial do Cabo,Baixadas Litor√¢neas,27715,31030,47.8,12.9
Barra do Pira√≠,M√©dio Para√≠ba,95390,91025,38.3,22.3
Barra Mansa,M√©dio Para√≠ba,177813,166654,45.4,16.3
Belford Roxo,Metropolitana,469332,446731,27.1,19.8
Bom Jardim,Serrana,25372,28166,63.2,10.6
Bom Jesus do Itabapoana,Noroeste Fluminense,35411,35797,49.0,15.0
Cabo Frio,Baixadas Litor√¢neas,186227,214057,41.8,15.4
Cachoeiras de Macacu,Metropolitana,54370,53887,41.6,9.2
Cambuci,Noroeste Fluminense,14816,14245,57.5,7.0
Campos dos Goytacazes,Norte Fluminense,463731,474667,42.0,17.6
Cantagalo,Serrana,20130,19443,48.8,18.8
Carapebus,Norte Fluminense,13427,13360,37.6,9.5
Cardoso Moreira,Noroeste Fluminense,12480,12686,49.0,12.1
Carmo,Serrana,17436,17149,48.1,20.2
Casimiro de Abreu,Baixadas Litor√¢neas,35359,45570,48.4,12.0
Duque de Caxias,Metropolitana,855048,782799,35.3,14.5
Itabora√≠,Metropolitana,218008,231004,35.7,12.1
Itagua√≠,Metropolitana,116841,132867,38.8,9.4
Japeri,Metropolitana,95492,96595,23.2,21.6
Mag√©,Metropolitana,227322,248208,35.8,14.5
Maric√°,Metropolitana,128489,223938,55.5,7.5
Mesquita,Metropolitana,168376,168849,35.9,14.8
Nil√≥polis,Metropolitana,157425,150281,42.7,13.4
Niter√≥i,Metropolitana,487562,523664,57.1,12.5
Nova Igua√ßu,Metropolitana,796257,825388,36.4,13.6
Petr√≥polis,Serrana,295917,298020,58.7,13.2
Queimados,Metropolitana,137961,139975,27.8,21.6
Rio de Janeiro,Metropolitana,6320446,6211223,45.4,15.6
S√£o Gon√ßalo,Metropolitana,999728,896744,38.5,15.5
Teres√≥polis,Serrana,163746,165123,61.9,10.9
"""
    
    df = pd.read_csv(io.StringIO(csv_data))
    
    # C√°lculos de n√∫meros absolutos
    df['Brancos (2010)'] = (df['Pop. 2010'] * df['% Brancos (2010)'] / 100).round().astype(int)
    df['Pretos (2010)'] = (df['Pop. 2010'] * df['% Pretos (2010)'] / 100).round().astype(int)
    df['Brancos (est. 2022)'] = (df['Pop. 2022'] * df['% Brancos (2010)'] / 100).round().astype(int)
    df['Pretos (est. 2022)'] = (df['Pop. 2022'] * df['% Pretos (2010)'] / 100).round().astype(int)
    
    return df

df = carregar_dados()

# --- Interface Principal ---
st.title("üèôÔ∏è Relat√≥rio Demogr√°fico por Munic√≠pio")
st.markdown("Selecione um munic√≠pio para visualizar a an√°lise detalhada de sua popula√ß√£o e composi√ß√£o racial.")

# Seletor de Munic√≠pio
municipios = sorted(df['Munic√≠pio'].unique())
municipio_selecionado = st.selectbox("Escolha um Munic√≠pio:", municipios)

# --- Se√ß√£o do Relat√≥rio Municipal ---
if municipio_selecionado:
    st.header(f"An√°lise de {municipio_selecionado}")

    # Filtrar dados para o munic√≠pio selecionado
    dados_municipio = df[df['Munic√≠pio'] == municipio_selecionado].iloc[0]

    # Calcular m√©tricas
    pop_2010 = dados_municipio['Pop. 2010']
    pop_2022 = dados_municipio['Pop. 2022']
    crescimento_percentual = ((pop_2022 - pop_2010) / pop_2010) * 100 if pop_2010 > 0 else 0

    # Exibir KPIs (Key Performance Indicators)
    kpi1, kpi2, kpi3 = st.columns(3)
    kpi1.metric(label="Popula√ß√£o em 2010", value=f"{pop_2010:,.0f}")
    kpi2.metric(label="Popula√ß√£o em 2022", value=f"{pop_2022:,.0f}")
    kpi3.metric(label="Crescimento Populacional", value=f"{crescimento_percentual:.2f}%")

    st.divider()

    # Preparar dados para os gr√°ficos
    dados_grafico_barras = pd.DataFrame({
        'Ano': ['2010', '2022 (est.)'],
        'Brancos': [dados_municipio['Brancos (2010)'], dados_municipio['Brancos (est. 2022)']],
        'Pretos': [dados_municipio['Pretos (2010)'], dados_municipio['Pretos (est. 2022)']]
    }).melt(id_vars='Ano', var_name='Cor/Ra√ßa', value_name='Popula√ß√£o')

    percent_outros = 100 - dados_municipio['% Brancos (2010)'] - dados_municipio['% Pretos (2010)']
    dados_grafico_pizza = pd.DataFrame({
        'Cor/Ra√ßa': ['Brancos', 'Pretos', 'Outros (Pardos, Amarelos, Ind√≠genas)'],
        'Percentual': [dados_municipio['% Brancos (2010)'], dados_municipio['% Pretos (2010)'], percent_outros]
    })
    
    # Exibir Gr√°ficos
    col1, col2 = st.columns(2)
    with col1:
        st.subheader("Crescimento da Popula√ß√£o (Absoluto)")
        fig_bar = px.bar(
            dados_grafico_barras,
            x='Ano',
            y='Popula√ß√£o',
            color='Cor/Ra√ßa',
            barmode='group',
            text_auto='.2s', # Formata o texto para n√∫meros grandes
            title=f"Popula√ß√£o Branca e Preta em {municipio_selecionado}"
        )
        fig_bar.update_traces(textposition='outside')
        st.plotly_chart(fig_bar, use_container_width=True)

    with col2:
        st.subheader("Composi√ß√£o Racial (Percentual)")
        
        st.warning("""
        **Aten√ß√£o:** A propor√ß√£o para 2022 √© **id√™ntica** √† de 2010 porque os dados s√£o uma estimativa. 
        Para ver a mudan√ßa real nos **n√∫meros**, observe o gr√°fico de barras √† esquerda.
        """)

        fig_pie_2010 = px.pie(
            dados_grafico_pizza,
            names='Cor/Ra√ßa',
            values='Percentual',
            hole=0.4,
            title=f"Distribui√ß√£o em 2010 (Total: {pop_2010:,.0f})"
        )
        
        fig_pie_2022 = px.pie(
            dados_grafico_pizza,
            names='Cor/Ra√ßa',
            values='Percentual',
            hole=0.4,
            title=f"Distribui√ß√£o Estimada em 2022 (Total: {pop_2022:,.0f})"
        )
        
        st.plotly_chart(fig_pie_2010, use_container_width=True)
        st.plotly_chart(fig_pie_2022, use_container_width=True)


# --- Se√ß√µes Adicionais (Expans√≠veis) ---
with st.expander("Clique para ver a An√°lise Consolidada por Regi√£o"):
    st.header("An√°lise Consolidada por Regi√£o")
    df_regiao = df.groupby('Regi√£o').sum(numeric_only=True)
    df_regiao['Crescimento Pop. (%)'] = ((df_regiao['Pop. 2022'] - df_regiao['Pop. 2010']) / df_regiao['Pop. 2010'] * 100).round(2)
    st.dataframe(df_regiao[['Pop. 2010', 'Pop. 2022', 'Crescimento Pop. (%)']].style.format("{:,.0f}", subset=['Pop. 2010', 'Pop. 2022']))

with st.expander("Clique para ver a Tabela de Dados Completa"):
    st.header("Tabela de Dados Completa")
    st.dataframe(df)

st.info("""
**Fonte dos Dados:** IBGE, Censos Demogr√°ficos de 2010 e 2022.
**Observa√ß√£o:** Os n√∫meros de 2022 para cor/ra√ßa s√£o estimativas baseadas na propor√ß√£o racial do Censo de 2010 aplicada √† popula√ß√£o total de 2022.
""")